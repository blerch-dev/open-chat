<!DOCTYPE html>
<html>
    <head>
        <%- include('../partials/head', locals); %>
    </head>
    <body>
        <header><%- include('../partials/header', locals) %></header>
        <main class="centered-group">
            <h3 id="auth_header"></h3>
            <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
            <div id="auth_output"></div>
        </main>
        <script>
            document.addEventListener('DOMContentLoaded', (e) => {
                let a = window.location.search.split('&');
                let t = a[a.length - 1]?.split('=')[1] ?? null;
                console.log(a, t);
                document.getElementById('auth_header').textContent = `Authing User from${ typeof(t) === 'string' ? ' ' + t : '' } Credientials`;
            });

            const fetchCode = <%= JSON.stringify(locals.fetchCode) %>;
            //console.log("Fetch Code:", fetchCode, typeof(fetchCode));
            let oauth_code = window.location.search.split('&')[0].split('=')[1], url = "";
            if(fetchCode) {
                url = `/auth/twitch?twitch_code=${typeof(oauth_code) === 'string' ? oauth_code : 'missing'}`;
            } else {
                url = `/auth/twitch`;
            }

            fetch(url, { method: 'POST' }).then((resp) => {
                resp.json().then((output) => {
                    console.log("Auth Twitch", output);
                    if(output.Error == undefined) {
                        let elem = document.createElement('label');
                        elem.textContent = 'Success.';
                        elem.style.color = "#1eff00";
                        document.getElementById('auth_output').appendChild(elem);
                        setTimeout(() => {
                            window.location.href = '/profile';
                        }, 1500);
                    } else {
                        let elem = document.createElement('label');
                        elem.textContent = 'Error on auth. Try again later.';
                        document.getElementById('auth_output').appendChild(elem);
                        
                        elem = document.createElement('pre');
                        elem.textContent = `${output.Error?.name ? `${output.Error?.name}: ` : ''}${output.Error?.message || 'Undefined Error'}`;
                        document.getElementById('auth_output').appendChild(elem);
                    }
                });
            });
        </script>
        <style>
            .lds-ellipsis {
                display: inline-block;
                position: relative;
                width: 80px;
                height: 80px;
            }
            .lds-ellipsis div {
                position: absolute;
                top: 33px;
                width: 13px;
                height: 13px;
                border-radius: 50%;
                background: #fff;
                animation-timing-function: cubic-bezier(0, 1, 1, 0);
            }
            .lds-ellipsis div:nth-child(1) {
                left: 8px;
                animation: lds-ellipsis1 0.6s infinite;
            }
            .lds-ellipsis div:nth-child(2) {
                left: 8px;
                animation: lds-ellipsis2 0.6s infinite;
            }
            .lds-ellipsis div:nth-child(3) {
                left: 32px;
                animation: lds-ellipsis2 0.6s infinite;
            }
            .lds-ellipsis div:nth-child(4) {
                left: 56px;
                animation: lds-ellipsis3 0.6s infinite;
            }
            @keyframes lds-ellipsis1 {
                0% {
                transform: scale(0);
                }
                100% {
                transform: scale(1);
                }
            }
            @keyframes lds-ellipsis3 {
                0% {
                transform: scale(1);
                }
                100% {
                transform: scale(0);
                }
            }
            @keyframes lds-ellipsis2 {
                0% {
                transform: translate(0, 0);
                }
                100% {
                transform: translate(24px, 0);
                }
            }
        </style>
    </body>
</html>